console.log("=== –ó–∞–¥–∞–Ω–∏–µ 1: –°—Ä–∞–∂–µ–Ω–∏–µ —Å –¥—Ä–∞–∫–æ–Ω–æ–º ===");

const hero = {
  name: prompt("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≥–µ—Ä–æ—è:"),
  age: Number(prompt("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")),
  hasSwordLicense: prompt("–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –ª–∏—Ü–µ–Ω–∑–∏—è –Ω–∞ –º–µ—á? (true/false):") === "true",
  hasArmor: prompt("–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –±—Ä–æ–Ω—è? (true/false):") === "true",
  powerLevel: Number(prompt("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–π —Å–∏–ª—ã (1-100):")),

  canFight: function () {
    return this.age >= 18 && this.powerLevel >= 50 && this.hasSwordLicense;
  },

  getBattleResult: function () {
    if (!this.canFight()) {
      return `${this.name}, –≤—ã —Å–ª–∏—à–∫–æ–º —Å–ª–∞–±—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –±–æ—é!`;
    }
    if (this.powerLevel > 70 && this.hasArmor) {
      return "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –¥—Ä–∞–∫–æ–Ω–∞!";
    } else {
      return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –¥—Ä–∞–∫–æ–Ω–∞...";
    }
  },

  calculatePoints: function () {
    let points = this.powerLevel;
    if (this.hasArmor) points += 20;
    if (this.hasSwordLicense) points += 20;
    return points;
  },

  getTitle: function () {
    const points = this.calculatePoints();
    if (points >= 120) return "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –≥–µ—Ä–æ–π";
    if (points >= 80) return "–û–ø—ã—Ç–Ω—ã–π –≤–æ–∏–Ω";
    return "–ù–æ–≤–∏—á–æ–∫";
  }
};

if (hero.canFight()) {
  console.log(`${hero.name}, –≤—ã –¥–æ–ø—É—â–µ–Ω—ã –∫ –±–æ—é —Å –¥—Ä–∞–∫–æ–Ω–æ–º!`);
  console.log(hero.getBattleResult());
} else {
  console.log(`${hero.name}, –≤—ã —Å–ª–∏—à–∫–æ–º —Å–ª–∞–±—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –±–æ—é!`);
}

console.log("–í–∞—à–∏ –æ—á–∫–∏ –≥–µ—Ä–æ—è:", hero.calculatePoints());
console.log("–í–∞—à —Ç–∏—Ç—É–ª:", hero.getTitle());

console.log("=== –ó–∞–¥–∞–Ω–∏–µ 2: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤ ===");

hero.level = 1;
hero.gold = 0;
hero.completedQuests = [];

hero.addQuest = function (questName, reward) {
  this.completedQuests.push(questName);
  this.gold += reward;
  console.log(`–ö–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω: ${questName} (+${reward} –∑–æ–ª–æ—Ç–∞)`);
  if (this.gold >= 50) {
    this.levelUp();
  }
};

hero.levelUp = function () {
  this.level++;
  console.log("üéâ –ì–µ—Ä–æ–π –ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å!");
};

hero.showStats = function () {
  console.log("--- –†–µ–∑—É–ª—å—Ç–∞—Ç ---");
  console.log(`–ò–º—è: ${this.name}`);
  console.log(`–í–æ–∑—Ä–∞—Å—Ç: ${this.age}`);
  console.log(`–£—Ä–æ–≤–µ–Ω—å: ${this.level}`);
  console.log(`–£—Ä–æ–≤–µ–Ω—å —Å–∏–ª—ã: ${this.powerLevel}`);
  console.log(`–ó–æ–ª–æ—Ç–æ: ${this.gold}`);
  console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤: ${this.completedQuests.length}`);
};

const quests = [
  { name: "–£–±–∏—Ç—å –∫—Ä—ã—Å –≤ –ø–æ–¥–≤–∞–ª–µ", reward: 5 },
  { name: "–°–ø–∞—Å—Ç–∏ –∫–æ—Ç–∞ –∏–∑ –¥–µ—Ä–µ–≤–∞", reward: 10 },
  { name: "–°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—Ü–∞", reward: 20 },
  { name: "–ü–æ–±–µ–¥–∏—Ç—å –≥–æ–±–ª–∏–Ω–æ–≤", reward: 50 },
  { name: "–†–∞–∑–≥–∞–¥–∞—Ç—å –¥—Ä–µ–≤–Ω—é—é –∑–∞–≥–∞–¥–∫—É", reward: 70 }
];

console.log("--- –ì–µ—Ä–æ–π –ø—Ä–∏—Å—Ç—É–ø–∞–µ—Ç –∫ –∫–≤–µ—Å—Ç–∞–º ---");

for (let quest of quests) {
  hero.addQuest(quest.name, quest.reward);
}

hero.showStats();
